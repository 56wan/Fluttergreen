from flask import Flask, request, jsonify
from flask_cors import CORS
from datetime import datetime
import uuid

app = Flask(__name__)
CORS(app)

clients = {}

def calculate_emi(principal, annual_rate, tenure_months):
    monthly_rate = annual_rate / (12 * 100)
    emi = (principal * monthly_rate * (1 + monthly_rate) ** tenure_months) / ((1 + monthly_rate) ** tenure_months - 1)
    return round(emi, 2)

@app.route("/add-client", methods=["POST"])
def add_client():
    data = request.get_json()
    client_id = str(uuid.uuid4())

    emi = calculate_emi(data['principal'], data['rate'], data['tenure'])

    clients[client_id] = {
        "name": data["name"],
        "principal": data["principal"],
        "rate": data["rate"],
        "tenure": data["tenure"],
        "emi": emi,
        "repayments": [],
        "start_date": datetime.now().isoformat()
    }

    return jsonify({"client_id": client_id, "emi": emi})

@app.route("/repay", methods=["POST"])
def repay():
    data = request.get_json()
    client = clients.get(data["client_id"])

    if not client:
        return jsonify({"error": "Client not found"}), 404

    client["repayments"].append({
        "amount": data["amount"],
        "date": datetime.now().isoformat()
    })

    return jsonify({"message": "Repayment recorded"})

@app.route("/report/<client_id>", methods=["GET"])
def report(client_id):
    client = clients.get(client_id)
    if not client:
        return jsonify({"error": "Client not found"}), 404

    total_paid = sum(r["amount"] for r in client["repayments"])
    total_due = client["emi"] * client["tenure"]
    balance = total_due - total_paid

    return jsonify({
        "name": client["name"],
        "principal": client["principal"],
        "rate": client["rate"],
        "tenure": client["tenure"],
        "emi": client["emi"],
        "total_due": round(total_due, 2),
        "total_paid": round(total_paid, 2),
        "balance": round(balance, 2),
        "repayments": client["repayments"]
    })

if __name__ == "__main__":
    app.run(debug=True)
